import React from 'react';
import {
    Adjective,
    Clause,
    Determiner,
    Noun,
    Predicate,
    Preposition,
    PrepositionalPhrase,
    Verb
} from 'phraser';

// const nouns = [
//     {
//     }
// ];

// Noun.lexicon(nouns);


export default (props) => {
    var sentences = [];

    sentences.push("Nouns and determiners");

    sentences.push(() => {
        return Noun("cat")
            .toString();
    });

    sentences.push(() => {
        return Noun("cat")
            .determiner(Determiner("the"))
            .toString();
    });

    sentences.push(() => {
        return Noun("cat")
            .determiner(Determiner("a"))
            .toString();
    });

    sentences.push(() => {
        return Noun("egg")
            .determiner(Determiner("a"))
            .toString();
    });

    sentences.push("Singular and plural nouns");

    sentences.push(() => {
        return Noun("cat")
            .determiner(Determiner("the"))
            .plural()
            .toString();
    });

    sentences.push(() => {
        return Noun("cat")
            .determiner(Determiner("the"))
            .plural()
            .single()
            .toString();
    });

    sentences.push(() => {
        return Noun("cat")
            .amount(1)
            .toString();
    });

    sentences.push(() => {
        return Noun("cat")
            .amount(5)
            .toString();
    });

    sentences.push(() => {
        return Noun("cat")
            .amount(0.2)
            .toString();
    });

    sentences.push("Adjectives");

    sentences.push(() => {
        return Noun("cat")
            .determiner(Determiner("the"))
            .adjective(Adjective("fat"))
            .toString();
    });

    sentences.push(() => {
        return Noun("cat")
            .determiner(Determiner("the"))
            .adjective(Adjective("fat"))
            .adjective(Adjective("blue"))
            .toString();

        // TODO commas! ordering!
    });

    sentences.push(() => {
        return Noun("Limpopo river")
            .determiner(Determiner("the"))
            .adjective(Adjective("great"))
            .adjective(Adjective("grey"))
            .adjective(Adjective("green"))
            .adjective(Adjective("greasy"))
            .toString();

        // TODO ordering!
    });

    sentences.push("Clauses and predicates");

    sentences.push(() => {
        return Clause(Noun("mr. cat"), Predicate(Verb("sits")))
            .toString();
    });

    sentences.push(() => {
        return Clause(Noun("cat"), Predicate(Verb("is"), Adjective("fat")))
            .toString();
    });

    sentences.push("Prepositional phrases");

    sentences.push(() => {
        var subject = Noun("cat")
            .determiner(Determiner("the"))
            .prepositionalPhrase(PrepositionalPhrase(Preposition("on"), Noun("mat").determiner("the")))

        return Clause(subject, Predicate(Verb("ate"), Noun("rocks")))
            .toString();
    });

    sentences.push(() => {
        var subject = Noun("cat")
            .determiner(Determiner("the"));

        return Clause(subject, Predicate(Verb("ate"), Noun("rocks")))
            .prepositionalPhrase(PrepositionalPhrase(Preposition("on"), Noun("mat").determiner("the")))
            .toString();
    });

    sentences.push(() => {
        var subject = Noun("cat")
            .determiner(Determiner("the"));

        var object = Noun("snails")
            .prepositionalPhrase(PrepositionalPhrase(Preposition("from"), Noun("France")))

        return Clause(subject, Predicate(Verb("ate"), object))
            .toString();
    });

    sentences.push(() => {
        var subject = Noun("cat")
            .determiner(Determiner("the"));

        return Clause(subject, Predicate(Verb("ate"), Noun("rocks")))
            .prepositionalPhrase(PrepositionalPhrase(Preposition("on"), Noun("mat").determiner("the")))
            .prepositionalPhrase(PrepositionalPhrase(Preposition("with"), Noun("Mum")))
            .prepositionalPhrase(PrepositionalPhrase(Preposition("under"), Noun("supervision").determiner("my")))
            .toString();
    });



    sentences.forEach(ii => console.log(typeof ii == "function" ? "> " + ii() : ii));

    return <div>
        <h1>Phraser</h1>
        <p>Hello. This is not an autogenerated sentence. But perhaps someday it will be.</p>
        {sentences.map((ii, kk) => typeof ii == "function"
            ? <p key={kk}>{ii()}</p>
            : <h4 key={kk}>{ii}</h4>
        )}
    </div>;
}

